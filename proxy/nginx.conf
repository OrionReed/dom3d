user  www-data;
worker_processes  1;

error_log  /var/log/nginx/error.log info;
pid        /var/run/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       /usr/local/openresty/nginx/conf/mime.types;
    default_type  application/octet-stream;

    # Defines the format of the access log
    log_format custom_format '[$time_local] $remote_addr - $remote_user "$request" '
                             '$status $body_bytes_sent "$http_referer" '
                             '"$http_user_agent" $host $request_uri '
                             '$proxy_add_x_forwarded_for $upstream_addr $upstream_response_time';

    # Configures the access log file path and log format
    access_log /var/log/nginx/access.log custom_format;

    sendfile        on;

    keepalive_timeout  65;
    proxy_buffer_size   64k;
    proxy_buffers   4 64k;
    proxy_busy_buffers_size   64k;

    include /etc/nginx/conf.d/*.conf;

    server {
        listen 80;
        location = /p {
            default_type     text/html;
            set $target_url $arg_uri;
            set_unescape_uri $target_url;

            # Add https if protocol not present
            if ($target_url !~ '^https?://') {
                set $target_url "https://$target_url";
            }

            # Add trailing slash if not present
            if ($target_url ~ '^\w+:\/\/[^\/]+$') {
                set $target_url "$target_url/";
            }

            resolver         8.8.8.8 ipv6=off;

            proxy_ssl_server_name       on;
            proxy_set_header            X-Real-IP       $remote_addr;
            proxy_set_header            X-Forwared-For  $proxy_add_x_forwarded_for;
            proxy_hide_header           'X-XSS-Protection';

            proxy_pass                  $target_url;
            proxy_set_header            Accept-Encoding "";
            proxy_set_header            Referer $target_url;
            proxy_redirect              ~^(.*)$    $scheme://$host/p?uri=$1;

            # Inject base tag
            sub_filter '<head>' '<head><base href="$target_url">';

            # Inject dom3d
            body_filter_by_lua_file 'modifiers/main.lua';

            # Enable HSTS
            more_set_headers 'X-Content-Type-Options: nosniff';

            # Enable XSS protection
            more_set_headers 'X-XSS-Protection:1; mode=block';

            # Allow cross-origin requests
            more_set_headers 'Access-Control-Allow-Origin: *';

            # Allow inline scripts
            more_set_headers 'Content-Security-Policy: script-src \'self\' \'unsafe-inline\'; object-src \'self\'';
        }
    }
}